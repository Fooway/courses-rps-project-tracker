"use strict";
var core_1 = require("@angular/core");
var static_data_1 = require("../../shared/static-data");
var PTItemListComponent = (function () {
    function PTItemListComponent() {
    }
    PTItemListComponent.prototype.ngOnInit = function () {
        this.ptItems = ITEMS;
    };
    return PTItemListComponent;
}());
PTItemListComponent = __decorate([
    core_1.Component({
        moduleId: module.id,
        selector: 'pt-item-list',
        templateUrl: 'pt-item-list.component.html',
        styleUrls: ['pt-item-list.component.css']
    }),
    __metadata("design:paramtypes", [])
], PTItemListComponent);
exports.PTItemListComponent = PTItemListComponent;
var ITEMS = [
    { id: '1', title: 'item 1', description: 'item 1 desc', estimate: 1, priority: static_data_1.PriorityEnum.Low, status: static_data_1.StatusEnum.Open, tasks: [], type: static_data_1.ItemTypeEnum.Bug, dateCreated: new Date(), dateModified: new Date(), comments: [], assignee: null },
    { id: '2', title: 'item 2', description: 'item 2 desc', estimate: 1, priority: static_data_1.PriorityEnum.Low, status: static_data_1.StatusEnum.Open, tasks: [], type: static_data_1.ItemTypeEnum.Bug, dateCreated: new Date(), dateModified: new Date(), comments: [], assignee: null },
    { id: '3', title: 'item 3', description: 'item 3 desc', estimate: 1, priority: static_data_1.PriorityEnum.Low, status: static_data_1.StatusEnum.Open, tasks: [], type: static_data_1.ItemTypeEnum.Bug, dateCreated: new Date(), dateModified: new Date(), comments: [], assignee: null },
    { id: '4', title: 'item 4', description: 'item 4 desc', estimate: 1, priority: static_data_1.PriorityEnum.Low, status: static_data_1.StatusEnum.Open, tasks: [], type: static_data_1.ItemTypeEnum.Bug, dateCreated: new Date(), dateModified: new Date(), comments: [], assignee: null },
    { id: '5', title: 'item 5', description: 'item 5 desc', estimate: 1, priority: static_data_1.PriorityEnum.Low, status: static_data_1.StatusEnum.Open, tasks: [], type: static_data_1.ItemTypeEnum.Bug, dateCreated: new Date(), dateModified: new Date(), comments: [], assignee: null },
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHQtaXRlbS1saXN0LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbInB0LWl0ZW0tbGlzdC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLHNDQUFrRDtBQUVsRCx3REFBa0Y7QUFVbEYsSUFBYSxtQkFBbUI7SUFJNUI7SUFBZ0IsQ0FBQztJQUVqQixzQ0FBUSxHQUFSO1FBQ0ksSUFBSSxDQUFDLE9BQU8sR0FBRyxLQUFLLENBQUM7SUFDekIsQ0FBQztJQUNMLDBCQUFDO0FBQUQsQ0FBQyxBQVRELElBU0M7QUFUWSxtQkFBbUI7SUFOL0IsZ0JBQVMsQ0FBQztRQUNQLFFBQVEsRUFBRSxNQUFNLENBQUMsRUFBRTtRQUNuQixRQUFRLEVBQUUsY0FBYztRQUN4QixXQUFXLEVBQUUsNkJBQTZCO1FBQzFDLFNBQVMsRUFBRSxDQUFFLDRCQUE0QixDQUFFO0tBQzlDLENBQUM7O0dBQ1csbUJBQW1CLENBUy9CO0FBVFksa0RBQW1CO0FBV2hDLElBQU0sS0FBSyxHQUFjO0lBQ3JCLEVBQUUsRUFBRSxFQUFFLEdBQUcsRUFBRSxLQUFLLEVBQUUsUUFBUSxFQUFFLFdBQVcsRUFBRSxhQUFhLEVBQUUsUUFBUSxFQUFFLENBQUMsRUFBRSxRQUFRLEVBQUUsMEJBQVksQ0FBQyxHQUFHLEVBQUUsTUFBTSxFQUFFLHdCQUFVLENBQUMsSUFBSSxFQUFFLEtBQUssRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLDBCQUFZLENBQUMsR0FBRyxFQUFFLFdBQVcsRUFBRSxJQUFJLElBQUksRUFBRSxFQUFFLFlBQVksRUFBRSxJQUFJLElBQUksRUFBRSxFQUFFLFFBQVEsRUFBRSxFQUFFLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBRTtJQUM5TyxFQUFFLEVBQUUsRUFBRSxHQUFHLEVBQUUsS0FBSyxFQUFFLFFBQVEsRUFBRSxXQUFXLEVBQUUsYUFBYSxFQUFFLFFBQVEsRUFBRSxDQUFDLEVBQUUsUUFBUSxFQUFFLDBCQUFZLENBQUMsR0FBRyxFQUFFLE1BQU0sRUFBRSx3QkFBVSxDQUFDLElBQUksRUFBRSxLQUFLLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSwwQkFBWSxDQUFDLEdBQUcsRUFBRSxXQUFXLEVBQUUsSUFBSSxJQUFJLEVBQUUsRUFBRSxZQUFZLEVBQUUsSUFBSSxJQUFJLEVBQUUsRUFBRSxRQUFRLEVBQUUsRUFBRSxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUU7SUFDOU8sRUFBRSxFQUFFLEVBQUUsR0FBRyxFQUFFLEtBQUssRUFBRSxRQUFRLEVBQUUsV0FBVyxFQUFFLGFBQWEsRUFBRSxRQUFRLEVBQUUsQ0FBQyxFQUFFLFFBQVEsRUFBRSwwQkFBWSxDQUFDLEdBQUcsRUFBRSxNQUFNLEVBQUUsd0JBQVUsQ0FBQyxJQUFJLEVBQUUsS0FBSyxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsMEJBQVksQ0FBQyxHQUFHLEVBQUUsV0FBVyxFQUFFLElBQUksSUFBSSxFQUFFLEVBQUUsWUFBWSxFQUFFLElBQUksSUFBSSxFQUFFLEVBQUUsUUFBUSxFQUFFLEVBQUUsRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFFO0lBQzlPLEVBQUUsRUFBRSxFQUFFLEdBQUcsRUFBRSxLQUFLLEVBQUUsUUFBUSxFQUFFLFdBQVcsRUFBRSxhQUFhLEVBQUUsUUFBUSxFQUFFLENBQUMsRUFBRSxRQUFRLEVBQUUsMEJBQVksQ0FBQyxHQUFHLEVBQUUsTUFBTSxFQUFFLHdCQUFVLENBQUMsSUFBSSxFQUFFLEtBQUssRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLDBCQUFZLENBQUMsR0FBRyxFQUFFLFdBQVcsRUFBRSxJQUFJLElBQUksRUFBRSxFQUFFLFlBQVksRUFBRSxJQUFJLElBQUksRUFBRSxFQUFFLFFBQVEsRUFBRSxFQUFFLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBRTtJQUM5TyxFQUFFLEVBQUUsRUFBRSxHQUFHLEVBQUUsS0FBSyxFQUFFLFFBQVEsRUFBRSxXQUFXLEVBQUUsYUFBYSxFQUFFLFFBQVEsRUFBRSxDQUFDLEVBQUUsUUFBUSxFQUFFLDBCQUFZLENBQUMsR0FBRyxFQUFFLE1BQU0sRUFBRSx3QkFBVSxDQUFDLElBQUksRUFBRSxLQUFLLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSwwQkFBWSxDQUFDLEdBQUcsRUFBRSxXQUFXLEVBQUUsSUFBSSxJQUFJLEVBQUUsRUFBRSxZQUFZLEVBQUUsSUFBSSxJQUFJLEVBQUUsRUFBRSxRQUFRLEVBQUUsRUFBRSxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUU7Q0FDalAsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IEl0ZW1UeXBlRW51bSwgUHJpb3JpdHlFbnVtLCBTdGF0dXNFbnVtIH0gZnJvbSAnLi4vLi4vc2hhcmVkL3N0YXRpYy1kYXRhJztcbmltcG9ydCB7IFBURG9tYWluIH0gZnJvbSAnLi4vLi4vdHlwaW5ncy9kb21haW4nO1xuaW1wb3J0IElQVEl0ZW0gPSBQVERvbWFpbi5JUFRJdGVtO1xuXG5AQ29tcG9uZW50KHtcbiAgICBtb2R1bGVJZDogbW9kdWxlLmlkLFxuICAgIHNlbGVjdG9yOiAncHQtaXRlbS1saXN0JyxcbiAgICB0ZW1wbGF0ZVVybDogJ3B0LWl0ZW0tbGlzdC5jb21wb25lbnQuaHRtbCcsXG4gICAgc3R5bGVVcmxzOiBbICdwdC1pdGVtLWxpc3QuY29tcG9uZW50LmNzcycgXVxufSlcbmV4cG9ydCBjbGFzcyBQVEl0ZW1MaXN0Q29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcbiAgICBwdWJsaWMgcHRJdGVtczogSVBUSXRlbVtdO1xuXG5cbiAgICBjb25zdHJ1Y3RvcigpIHsgfVxuXG4gICAgbmdPbkluaXQoKSB7XG4gICAgICAgIHRoaXMucHRJdGVtcyA9IElURU1TO1xuICAgIH1cbn1cblxuY29uc3QgSVRFTVM6IElQVEl0ZW1bXSA9IFtcbiAgICB7IGlkOiAnMScsIHRpdGxlOiAnaXRlbSAxJywgZGVzY3JpcHRpb246ICdpdGVtIDEgZGVzYycsIGVzdGltYXRlOiAxLCBwcmlvcml0eTogUHJpb3JpdHlFbnVtLkxvdywgc3RhdHVzOiBTdGF0dXNFbnVtLk9wZW4sIHRhc2tzOiBbXSwgdHlwZTogSXRlbVR5cGVFbnVtLkJ1ZywgZGF0ZUNyZWF0ZWQ6IG5ldyBEYXRlKCksIGRhdGVNb2RpZmllZDogbmV3IERhdGUoKSwgY29tbWVudHM6IFtdLCBhc3NpZ25lZTogbnVsbCB9LFxuICAgIHsgaWQ6ICcyJywgdGl0bGU6ICdpdGVtIDInLCBkZXNjcmlwdGlvbjogJ2l0ZW0gMiBkZXNjJywgZXN0aW1hdGU6IDEsIHByaW9yaXR5OiBQcmlvcml0eUVudW0uTG93LCBzdGF0dXM6IFN0YXR1c0VudW0uT3BlbiwgdGFza3M6IFtdLCB0eXBlOiBJdGVtVHlwZUVudW0uQnVnLCBkYXRlQ3JlYXRlZDogbmV3IERhdGUoKSwgZGF0ZU1vZGlmaWVkOiBuZXcgRGF0ZSgpLCBjb21tZW50czogW10sIGFzc2lnbmVlOiBudWxsIH0sXG4gICAgeyBpZDogJzMnLCB0aXRsZTogJ2l0ZW0gMycsIGRlc2NyaXB0aW9uOiAnaXRlbSAzIGRlc2MnLCBlc3RpbWF0ZTogMSwgcHJpb3JpdHk6IFByaW9yaXR5RW51bS5Mb3csIHN0YXR1czogU3RhdHVzRW51bS5PcGVuLCB0YXNrczogW10sIHR5cGU6IEl0ZW1UeXBlRW51bS5CdWcsIGRhdGVDcmVhdGVkOiBuZXcgRGF0ZSgpLCBkYXRlTW9kaWZpZWQ6IG5ldyBEYXRlKCksIGNvbW1lbnRzOiBbXSwgYXNzaWduZWU6IG51bGwgfSxcbiAgICB7IGlkOiAnNCcsIHRpdGxlOiAnaXRlbSA0JywgZGVzY3JpcHRpb246ICdpdGVtIDQgZGVzYycsIGVzdGltYXRlOiAxLCBwcmlvcml0eTogUHJpb3JpdHlFbnVtLkxvdywgc3RhdHVzOiBTdGF0dXNFbnVtLk9wZW4sIHRhc2tzOiBbXSwgdHlwZTogSXRlbVR5cGVFbnVtLkJ1ZywgZGF0ZUNyZWF0ZWQ6IG5ldyBEYXRlKCksIGRhdGVNb2RpZmllZDogbmV3IERhdGUoKSwgY29tbWVudHM6IFtdLCBhc3NpZ25lZTogbnVsbCB9LFxuICAgIHsgaWQ6ICc1JywgdGl0bGU6ICdpdGVtIDUnLCBkZXNjcmlwdGlvbjogJ2l0ZW0gNSBkZXNjJywgZXN0aW1hdGU6IDEsIHByaW9yaXR5OiBQcmlvcml0eUVudW0uTG93LCBzdGF0dXM6IFN0YXR1c0VudW0uT3BlbiwgdGFza3M6IFtdLCB0eXBlOiBJdGVtVHlwZUVudW0uQnVnLCBkYXRlQ3JlYXRlZDogbmV3IERhdGUoKSwgZGF0ZU1vZGlmaWVkOiBuZXcgRGF0ZSgpLCBjb21tZW50czogW10sIGFzc2lnbmVlOiBudWxsIH0sXG5dOyJdfQ==